Method - 1

import java.io.*;
import java.util.*;
class Check2
{
    public static void main(String[] args) {        
        int events[][]={{1,4},{4,4},{2,2},{3,4},{1,1}};
        PriorityQueue<int[][]> min_heap= new PriorityQueue<int[][]>(events ,new Comparator<Integer>()
        {
            @Override
            public int compare(int a[][], int b[][])
            {
                int res=-1;
            
                if(a[0][1]==b[0][1])
                {
                    if(a[0][0]>b[0][0])
                        res=-1;
                    else
                        res=1;
                }
                else
                {                
                    if(a[0][1]>b[0][1])
                        res=-1;
                    else
                        res=1;
                }
            }            
        }
        );

    }
}



Method -2
public static void main(String[] args) {
    int[][] events ={{1,4},{4,4},{2,2},{3,4},{1,1}};
    PriorityQueue<int[]> min_heap = new PriorityQueue<>((x, y) -> {
        if(x[0] != y[0]) {
            return Integer.compare(x[0], y[0]);
        }

        if(x[1] != y[1]) {
            return Integer.compare(x[1], y[1]);
        }

        return 0;
    });
    min_heap.addAll(Arrays.asList(events));
    while(min_heap.peek() != null) {
        System.out.println(Arrays.toString(min_heap.poll()));
    }
}
